// same opacity as the tree overlay
$pageloader-opacity: 0.6;
@import "colors";
@import "pivottable/dist/pivot.css";
@import "bulma/bulma";
@import "bulma-badge/src/sass/index";
@import "bulma-pageloader/dist/css/bulma-pageloader";
@import "balloon-css/src/balloon";

[aria-label][data-balloon-pos]:after {
    z-index: 500;
    white-space: nowrap !important;
}

@import "material";
@import "@ng-select/ng-select/themes/default.theme.css";
@import "primeicons/primeicons.css";
@import "primeng-bulma";

@media print {

    .is-hidden-print,
    .is-hidden-print * {
        display: none !important;
    }

    .is-print-paddingless {
        padding: 0 !important;
    }

    .p-table .p-table-thead,
    .p-table .p-table-tbody,
    .p-table .p-table-tfoot {

        >tr>th,
        >tr>td {
            border: solid 1px $dark !important;
        }
    }
}

.pageloader {
    transition: none;
    opacity: 0;

    &.is-active {
        transition: transform 0s ease, opacity .35s ease-out;
        opacity: 1;
    }
}

.modal {
    z-index: 501;
}

.is-loading {
    /*! adapted from bulma.io v0.6.0 | MIT License | github.com/jgthms/bulma */

    &:after {
        animation: spinAround 500ms infinite linear;
        border: 3px solid $secondary;
        border-radius: 100%;
        border-right-color: transparent;
        border-top-color: transparent;
        content: "";

        height: 1em;
        width: 1em;
    }

    // Resolves to h1.is-loading
    @at-root h1#{&},
    h2#{&},
    h3#{&},
    h4#{&},
    h5#{&},
    h6#{&},
    span#{&} {
        &:after {
            display: inline-block;
            margin-left: 0.4em;
            vertical-align: bottom;
        }
    }

    @at-root &.box {
        position: relative;
        display: block;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}

.highlight {
    background: $highlight;
    color: $highlight-text;
}

@each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    .tag.is-#{$name} .highlight {
        @if (length($pair) > 3) {
            $color-light: nth($pair, 3);
            $color-dark: nth($pair, 4);

            background-color: $color-dark;
            color: $color-light;

            &.is-light {
                background-color: $color-invert;
                color: $color;
            }
        } @else {
            background: $color-invert;
            color: $color;
        }
    }
}
